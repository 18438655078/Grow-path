一、动态规则
    1、动态规划先解决子问题，再逐步解决大问题。
    2、动态规划功能强大，它能够解决子问题并使用这些答案来解决大问题。但仅当每个子问题都是离散的，即不依赖于其他子问题时，动态规划才管用。
    3、只能单件取。
    4、问题
        9.2 假设你要去野营。你有一个容量为6磅的背包，需要决定该携带下面的哪些东西。其中
          每样东西都有相应的价值，价值越大意味着越重要：
           水（重3磅，价值10）；
           书（重1磅，价值3）
           食物（重2磅，价值9）；
           夹克（重2磅，价值5）；
           相机（重1磅，价值6）。
          请问携带哪些东西时价值最高？
          答：
                    1      2      3       4      5       6   
          水(a)     0      0    10(a)   10(a)   10(a)   10(a)  
          书(b)    3(b)   3(b)  10(a)   13(ab)  13(ab)  13(ab)
          食物(c)  3(b)   9(c)  12(bc)  13(ab)  19(ac)  22(abc)
          夹克(d)  3(b)   9(c)  12(bc)  14(cd)  19(ac)  22(abc)
          相机(e)  6(e)   9(c)  15(ce)  18(bce) 19(ac)  25(ace)
          所以应该带ace 即水、食物和相机。
    5、动态规则的启示
        a)动态规划可帮助你在给定约束条件下找到最优解。在背包问题中，你必须在背包容量给定的情况下，偷到价值最高的商品。
        b)在问题可分解为彼此独立且离散的子问题时，就可使用动态规划来解决。
        c)每种动态规划解决方案都涉及网格。
        d)单元格中的值通常就是你要优化的值。在前面的背包问题中，单元格的值为商品的价值。
        e)每个单元格都是一个子问题，因此你应考虑如何将问题分成子问题，这有助于你找出网格的坐标轴。
    6、费曼算法
        (1) 将问题写下来。
        (2) 好好思考。
        (3) 将答案写下来。   
    7、问题
        9.3 请绘制并填充用来计算blue和clues最长公共子串的网格。
                 b       l       u       e         
          c      0       0       0       0    
          l      0       1       0       0 
          u      0       0       2       0  
          e      0       0       0       3  
          s      0       0       0       0
          伪代码算法：
          if word_a[i] == word_b[j]:
           cell[i][j] = cell[i-1][j-1] + 1
          else:
           cell[i][j] = 0 
    8、小结
        a)需要在给定约束条件下优化某种指标时，动态规划很有用。
        b)问题可分解为离散子问题时，可使用动态规划来解决。
        c)每种动态规划解决方案都涉及网格。
        d)单元格中的值通常就是你要优化的值。
        e)每个单元格都是一个子问题，因此你需要考虑如何将问题分解为子问题。
        f)没有放之四海皆准的计算动态规划解决方案的公式。
          
